{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\websiteVITA\\\\EXPRESS-REACT-PROJECT\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [backendData, setBackendData] = useState([]);\n  const [imageFiles, setImageFiles] = useState([]);\n  useEffect(() => {\n    var coll = document.getElementsByClassName(\"collapsible\");\n    var i;\n    for (i = 0; i < coll.length; i++) {\n      coll[i].addEventListener(\"click\", function () {\n        this.classList.toggle(\"active\");\n        var content = this.nextElementSibling;\n        if (content.style.maxHeight) {\n          content.style.maxHeight = null;\n        } else {\n          content.style.maxHeight = content.scrollHeight + \"px\";\n        }\n      });\n    }\n  }, []);\n  useEffect(() => {\n    fetch('/api').then(response => response.json()).then(data => {\n      setBackendData(data);\n    });\n    fetch('/api/images').then(response => response.json()).then(images => {\n      setImageFiles(images);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: /*#__PURE__*/_jsxDEV(\"body\", {\n      className: \"app-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"center\", {\n        children: [/*#__PURE__*/_jsxDEV(\"font\", {\n          className: \"title\",\n          size: \"+20\",\n          children: \"PSVITA/GAD TRACKER (WIP)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          class: \"collapsible\",\n          children: \"Open Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"content\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Chatty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-container\",\n        children: imageFiles.map((imageFile, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"image\",\n          src: `/images/${imageFile}`,\n          alt: `img-${index}`\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"X76dbFvlNxpGlaHbAwS+9XLkKWI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","backendData","setBackendData","imageFiles","setImageFiles","coll","document","getElementsByClassName","i","length","addEventListener","classList","toggle","content","nextElementSibling","style","maxHeight","scrollHeight","fetch","then","response","json","data","images","className","children","size","fileName","_jsxFileName","lineNumber","columnNumber","type","class","map","imageFile","index","src","alt","_c","$RefreshReg$"],"sources":["C:/projects/websiteVITA/EXPRESS-REACT-PROJECT/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [backendData, setBackendData] = useState([]);\n  const [imageFiles, setImageFiles] = useState([]);\n\n  useEffect(() => {\n    var coll = document.getElementsByClassName(\"collapsible\");\n    var i;\n  \n    for (i = 0; i < coll.length; i++) {\n      coll[i].addEventListener(\"click\", function() {\n        this.classList.toggle(\"active\");\n        var content = this.nextElementSibling;\n        if (content.style.maxHeight){\n          content.style.maxHeight = null;\n        } else {\n          content.style.maxHeight = content.scrollHeight + \"px\";\n        }\n      });\n    }\n  }, []);\n  \n  useEffect(() => {\n    fetch('/api')\n      .then(response => response.json())\n      .then(data => {\n        setBackendData(data);\n      });\n\n    fetch('/api/images')\n      .then(response => response.json())\n      .then(images => {\n        setImageFiles(images);\n      });\n  }, []);\n\n\n\n  return (\n    <div className=\"app-container\">\n      <body className=\"app-body\">\n        <center>\n          <font className=\"title\" size=\"+20\">PSVITA/GAD TRACKER (WIP)</font>\n          <button type=\"button\" class=\"collapsible\">Open Chat</button>\n          <div class=\"content\">\n            <p>Chatty</p>\n          </div>\n        </center>\n        <div className=\"image-container\">\n          {imageFiles.map((imageFile, index) => (\n            <img className=\"image\" key={index} src={`/images/${imageFile}`} alt={`img-${index}`} />\n          ))}\n        </div>\n      </body>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd,IAAIU,IAAI,GAAGC,QAAQ,CAACC,sBAAsB,CAAC,aAAa,CAAC;IACzD,IAAIC,CAAC;IAEL,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,IAAI,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;MAChCH,IAAI,CAACG,CAAC,CAAC,CAACE,gBAAgB,CAAC,OAAO,EAAE,YAAW;QAC3C,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC;QAC/B,IAAIC,OAAO,GAAG,IAAI,CAACC,kBAAkB;QACrC,IAAID,OAAO,CAACE,KAAK,CAACC,SAAS,EAAC;UAC1BH,OAAO,CAACE,KAAK,CAACC,SAAS,GAAG,IAAI;QAChC,CAAC,MAAM;UACLH,OAAO,CAACE,KAAK,CAACC,SAAS,GAAGH,OAAO,CAACI,YAAY,GAAG,IAAI;QACvD;MACF,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,EAAE,CAAC;EAENtB,SAAS,CAAC,MAAM;IACduB,KAAK,CAAC,MAAM,CAAC,CACVC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZpB,cAAc,CAACoB,IAAI,CAAC;IACtB,CAAC,CAAC;IAEJJ,KAAK,CAAC,aAAa,CAAC,CACjBC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACI,MAAM,IAAI;MACdnB,aAAa,CAACmB,MAAM,CAAC;IACvB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAIN,oBACEzB,OAAA;IAAK0B,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC5B3B,OAAA;MAAM0B,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACxB3B,OAAA;QAAA2B,QAAA,gBACE3B,OAAA;UAAM0B,SAAS,EAAC,OAAO;UAACE,IAAI,EAAC,KAAK;UAAAD,QAAA,EAAC;QAAwB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAClEhC,OAAA;UAAQiC,IAAI,EAAC,QAAQ;UAACC,KAAK,EAAC,aAAa;UAAAP,QAAA,EAAC;QAAS;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC5DhC,OAAA;UAAKkC,KAAK,EAAC,SAAS;UAAAP,QAAA,eAClB3B,OAAA;YAAA2B,QAAA,EAAG;UAAM;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACThC,OAAA;QAAK0B,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAC7BtB,UAAU,CAAC8B,GAAG,CAAC,CAACC,SAAS,EAAEC,KAAK,kBAC/BrC,OAAA;UAAK0B,SAAS,EAAC,OAAO;UAAaY,GAAG,EAAG,WAAUF,SAAU,EAAE;UAACG,GAAG,EAAG,OAAMF,KAAM;QAAE,GAAxDA,KAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAqD,CACvF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAC9B,EAAA,CAvDQD,GAAG;AAAAuC,EAAA,GAAHvC,GAAG;AAyDZ,eAAeA,GAAG;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}