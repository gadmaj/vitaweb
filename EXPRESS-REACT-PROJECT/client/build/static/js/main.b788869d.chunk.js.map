{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","_useState","useState","_useState2","_slicedToArray","setBackendData","_useState3","_useState4","imageFiles","setImageFiles","useEffect","fetch","then","response","json","data","images","React","createElement","className","size","slice","reverse","map","imageFile","index","key","src","concat","alt","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"mMAsCeA,MAnCf,WAAe,IAAAC,EACyBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA9BI,GAAFF,EAAA,GAAgBA,EAAA,IAAAG,EACEJ,mBAAS,IAAGK,EAAAH,YAAAE,EAAA,GAAzCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAgBhC,OAdAG,oBAAU,WACRC,MAAM,QACHC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACJV,EAAeU,KAGnBJ,MAAM,eACHC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAI,GACJP,EAAcO,MAEjB,IAGDC,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,QAAMC,UAAU,YACdF,IAAAC,cAAA,cACED,IAAAC,cAAA,QAAMC,UAAU,QAAQC,KAAK,OAAM,6BAErCH,IAAAC,cAAA,OAAKC,UAAU,mBACpBX,EAAWa,QAAQC,UAAUC,IAAI,SAACC,EAAWC,GAAK,OACjDR,IAAAC,cAAA,OAAKC,UAAU,QAAQO,IAAKD,EAAOE,IAAG,WAAAC,OAAaJ,GAAaK,IAAG,OAAAD,OAASH,WCjBjEK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAtB,KAAAqB,EAAAE,KAAA,UAAqBvB,KAAK,SAAAwB,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH7B,IAAAC,cAACD,IAAM8B,WAAU,KACf9B,IAAAC,cAAClB,EAAG,QAOR8B","file":"static/js/main.b788869d.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [backendData, setBackendData] = useState([]);\n  const [imageFiles, setImageFiles] = useState([]);\n\n  useEffect(() => {\n    fetch('/api')\n      .then(response => response.json())\n      .then(data => {\n        setBackendData(data);\n      });\n\n    fetch('/api/images')\n      .then(response => response.json())\n      .then(images => {\n        setImageFiles(images);\n      });\n  }, []);\n\n  return (\n    <div className=\"app-container\">\n      <body className=\"app-body\">\n        <center>\n          <font className=\"title\" size=\"+20\">PSVITA/GAD TRACKER (WIP)</font>\n        </center>\n        <div className=\"image-container\">\n  {imageFiles.slice().reverse().map((imageFile, index) => (\n    <img className=\"image\" key={index} src={`/images/${imageFile}`} alt={`img-${index}`} />\n  ))}\n</div>\n\n      </body>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}